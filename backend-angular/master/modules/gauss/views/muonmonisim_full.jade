// Small title indicating what kind of analysis this is
// TODO Make this inhert from the controller  
h3 Validation Analysis
  small.text-muted LHCbPR

// The default search panel. This should probably not be changed
#panelSearch.panel.panel-default
  .panel-heading
    paneltool(tool-collapse)
    .panel-title Select one or more jobs
  .panel-wrapper(collapse="panelSearch")
    .panel-body
      // select-jobs(selected-app="DUMMYAPP" selected-options="100Evts-GAUSS-2015" on-jobs-selected="lookHistos(jobIds)")
      select-jobs(on-jobs-selected="lookHistos(jobIds)")

// Shows secondary panel selecting which plot to display from all ROOT files found in the selected jobs.
// TODO there is a lot of logic here, this should be farmed out to the controller
// TODO Currently _feels_ overcomplicated. Review to see if there is a more succint/meaningful way to do this
// TODO make a directive for this. It should be obvious what each part does from each directive.
#panelJobs.panel.panel-default
  .panel-heading
    paneltool(tool-collapse)
    .panel-title Select item to plot
  .panel-wrapper(collapse="panelJobs")
    .panel-body
      .alert.alert-info(ng-show="noJobData") No root file was found !
      div(ng-repeat="(key, job) in data.treedirs", id="jobsTrees", ng-hide="noJobData")
        div(ng-if="key.split(',').length > 1")
          h3(style="color:red") Compare jobs:
        div(ng-if="key.split(',').length == 1")
          h3(style="color:red") Analyze job:
        ul
          li(style="font-size:150%; {{ 'color: ' + color[$index+1] }};", ng-repeat="file in key.split(',')")
            | {{ getJobName(file.split('/')[0]) }}
        .col-lg-6
            form(name="myForm")
              select(name="{{ 'repeatSelect' + key }}" id="{{ 'repeatSelect' + key }}" ng-model="data.repeatSelect[key]" ng-change="showPlots(key, data.repeatSelect[key])")
                option(ng-repeat="(path, val) in job" value="{{ path }}") 
                  | {{ val }}
        .col-lg-6
            div(ng-repeat="(key, job) in data.treeplots", id="jobsPlots", ng-hide="noJobData")
              form(name="myForm")
                select(name="{{ 'plotSelect' + key }}" id="{{ 'plotSelect' + key }}" ng-model="data.plotSelect[key]" ng-change="showChart(key, data.plotSelect[key])")
                  option(ng-selected="true" value="") -- select a plots --
                  option(value="ALL") ALL
                  option(ng-repeat="(path, val) in job" value="{{ path }}") {{ val }}

// The following 2 divs are for different cases. It's not clear to me (nfarley) quite what these cases are yet, but I will examine them to see
// TODO examine these two cases and see if they can be taken out into directives
                  
div(ng-if="jobId.split('__').length == 3")
  #panelOptions.panel.panel-default
    .panel-heading
      paneltool(tool-collapse)
      .panel-title Options
    .panel-wrapper(collapse="panelOptions")
      .panel-body
         form.form-inline(role='form')
          fieldset
            .form-group.col-sm-6
                label.radio-inline(ng-repeat="option in commonoptions")
                  input(type="radio", value="{{ option.value }}", name="optvalue", ng-model="data.optvalue" )
                  |  {{ option.text }}

div(ng-if="jobId.split('__').length == 2")
  #panelOptions.panel.panel-default
    .panel-heading
      paneltool(tool-collapse)
      .panel-title Options
    .panel-wrapper(collapse="panelOptions")
      .panel-body
         form.form-inline(role='form')
          fieldset
            .form-group.col-sm-6
                // label.radio-inline(ng-repeat="option in commonoptions")
                label.radio-inline(ng-repeat="plotView in plotViews")
                  input(type="radio", value="{{ plotView.directiveName }}", name="optvalue", ng-model="data.optvalue" )
                  |  {{ plotView.displayName }}
                label.radio-inline(ng-repeat="option in options")
                  input(type="radio", value="{{ option.value }}", name="optvalue", ng-model="data.optvalue" )
                  |  {{ option.text }}


// plot-view-generator(plot-view="data.optvalue", graphs="data.graphs", files-and-titles="files_and_titles", test='test', url='url')
// plot-view-generator(plot-view="data.optvalue")
// | the results of the plotViewGenerator should be here:
// span(plot-view-generator="data.optvalue")

// // This is the actual drawing place. A directive is used to plot (rootjsserver). 
// .row.traditional(ng-class="csspinner")
//   .col-lg-12
//       div(ng-if="data.optvalue === 'Split'")
//         plot-split(graphs="data.graphs", files-and-titles="files_and_titles", test='test', url='url')
//       div(ng-if="data.optvalue != 'Split'")
//         div(ng-repeat="(item, title) in data.graphs", ng-hide="noJobData")
//           h3(style="color:red") {{ title }}
//           rootjsserver(entrypoint="url"
//               files="files_and_titles"
//               items="item"
//               compute="data.optvalue"
//               width="800" height="600")


pre.
  data.optvalue: {{data.optvalue}}
  directiveMapService: {{ plotViews }}

label plot directive:
  input(ng-model="data.optvalue")
hr
h3 Plots:
plot-view-generator(plot-view="data.optvalue", graphs="data.graphs", files-and-titles="files_and_titles", test='test', url='url')
